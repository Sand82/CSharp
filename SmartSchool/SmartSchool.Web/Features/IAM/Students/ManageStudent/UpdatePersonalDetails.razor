@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using SmartSchool.Web.Services.BffApiClient

<div class="modal fade" id="editPersonalDetails">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
            </div>
            <div class="modal-body">
                <EditForm Enhance Model="Input" OnValidSubmit="SubmitForm" FormName="updateStudentPersonalInfo">
                    <div class="row">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                    </div>
                    <div class="row">
                        <div class="mb-3">
                            <label for="firstName" class="form-label">First Name:</label>
                            <InputText @bind-Value="Input.FirstName" class="form-control" id="firstName"/>
                        </div>
                        <div class="mb-3">
                            <label for="lastName" class="form-label">Last Name:</label>
                            <InputText @bind-Value="Input.LastName" class="form-control" id="lastName"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="email" class="form-label">Email:</label>
                                <InputText @bind-Value="Input.Email" class="form-control" id="email"/>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="dob" class="form-label">Date of birth:</label>
                                <InputDate TValue="DateTime" @bind-Value="Input.DateOfBirth" class="form-control" id="dob"/>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="mb-3">
                            <label for="phoneNumber" class="form-label">Phone:</label>
                            <InputText @bind-Value="Input.PhoneNumber" class="form-control" id="phoneNumber"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success">Save</button>
                        </div>
                    </div>
                </EditForm>
            </div>

        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm(FormName = "updateStudentPersonalInfo")]
    public PersonalDetailsUpdate Input { get; set; } = new();

    [Parameter]
    public SmartSchool.Web.Services.BffApiClient.StudentDetails Student { get; set; }

    [Parameter]
    public EventCallback<SmartSchool.Web.Services.BffApiClient.StudentDetails> OnPersonalInfoUpdated { get; set; }

    protected override void OnInitialized()
    {        

        if (Input.Email is null)
        {
            Input.Email = Student?.Email;
        }

        if (Input.FirstName is null)
        {
            Input.FirstName = Student?.FirstName;
        }

        if (Input.LastName is null)
        {
            Input.LastName = Student?.LastName;
        }

        if (Input.PhoneNumber is null)
        {
            Input.PhoneNumber = Student?.PhoneNumber;
        } 

        if (Student?.DateOfBirth is null)
        {
            Input.DateOfBirth = Student?.DateOfBirth ?? DateTime.UtcNow;
        }
    }

    private async Task SubmitForm()
    {
        var updated = new SmartSchool.Web.Services.BffApiClient.StudentDetails
        (
            Student!.StudentId, Input.FirstName!, Input.LastName!, Input.Email, Input.DateOfBirth, Input.PhoneNumber, Student.Address, Student.Relatives
        );

        await OnPersonalInfoUpdated.InvokeAsync(updated);
    }

    public class PersonalDetailsUpdate
    {
        [Required]
        public string? FirstName { get; set; }

        [Required]
        public string? LastName { get; set; }

        [Required]
        public string? Email { get; set; }

        [Required]
        public string? PhoneNumber { get; set; }

        [Required]
        public DateTime DateOfBirth { get; set; }
    }
}
